name: Docker
on: [push]
jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      TAG: latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}

      - name: Install Ubuntu dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y python3-pip
          sudo pip3 install jinja2-cli

      - run: echo "TAG=${GITHUB_REF:11}" >> $GITHUB_ENV
        if: startsWith(github.ref, 'refs/tags/v')

      - name: Setup ubuntu docker image tags
        id: ubuntu_docker_image_tags
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.DOCKER_ORGANIZATION }}/compute
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')

      - name: Build Ubuntu based docker image (no push)
        id: ubuntu_docker_build
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ steps.ubuntu_docker_image_tags.outputs.tags }}
          push: false
          load: true
          cache-from: type=gha,mode=max,scope=ubuntu
          cache-to: type=gha,scope=ubuntu
          build-args: RELEASE=${{ (startsWith(github.ref, 'refs/tags/v') && 'yes' || 'no') }}
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.CI_TOKEN }}

      - name: Integration tests
        timeout-minutes: 35
        run: |
          yarn install
          DOCKERIMAGE=$(echo -n ${{ steps.ubuntu_docker_image_tags.outputs.tags }} | cut -d " " -f 1) yarn test:integration

      - name: Push Ubuntu based docker image
        id: ubuntu_docker_push
        uses: docker/build-push-action@v4
        if: ${{ github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v') }}
        with:
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ steps.ubuntu_docker_image_tags.outputs.tags }}
          push: true
          load: false
          cache-from: type=gha,mode=max,scope=ubuntu
          cache-to: type=gha,scope=ubuntu
          build-args: RELEASE=${{ (startsWith(github.ref, 'refs/tags/v') && 'yes' || 'no') }}
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.CI_TOKEN }}

      - name: Kernel log
        if:  ${{ always() }}
        run: |
          sudo dmesg

      - name: Compress logs
        if:  ${{ always() }}
        run: |
          gzip -9 logs.txt

      - name: Upload integration logs
        uses: actions/upload-artifact@v3
        if:  ${{ always() }}
        with:
          name: integration-logs
          path: logs.txt.gz
